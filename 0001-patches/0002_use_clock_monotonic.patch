From 88b20e808ae6b8376aa19dea657fb3cc55974a4a Mon Sep 17 00:00:00 2001
From: Andrew Eikum <aeikum@codeweavers.com>
Date: Tue, 28 Aug 2018 12:57:32 -0500
Subject: [PATCH] ntdll, server: Never use CLOCK_MONOTONIC_RAW

Using CLOCK_MONOTONIC avoids a kernel call.
---
 dlls/ntdll/time.c | 2 +-
 server/request.c  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/time.c b/dlls/ntdll/time.c
index 20de627c28..88c55f0b68 100644
--- a/dlls/ntdll/time.c
+++ b/dlls/ntdll/time.c
@@ -114,7 +114,7 @@ static inline ULONGLONG monotonic_counter(void)
     return mach_absolute_time() * timebase.numer / timebase.denom / 100;
 #elif defined(HAVE_CLOCK_GETTIME)
     struct timespec ts;
-#ifdef CLOCK_MONOTONIC_RAW
+#if 0
     if (!clock_gettime( CLOCK_MONOTONIC_RAW, &ts ))
         return ts.tv_sec * (ULONGLONG)TICKSPERSEC + ts.tv_nsec / 100;
 #endif
diff --git a/server/request.c b/server/request.c
index f089ccc2d5..b985c712fd 100644
--- a/server/request.c
+++ b/server/request.c
@@ -534,7 +534,7 @@ unsigned int get_tick_count(void)
     return mach_absolute_time() * timebase.numer / timebase.denom / 1000000;
 #elif defined(HAVE_CLOCK_GETTIME)
     struct timespec ts;
-#ifdef CLOCK_MONOTONIC_RAW
+#if 0
     if (!clock_gettime( CLOCK_MONOTONIC_RAW, &ts ))
         return ts.tv_sec * 1000 + ts.tv_nsec / 1000000;
 #endif
-- 
2.22.0
